const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });
const adminChatId = process.env.ADMIN_CHAT_ID;

let userState = {};

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, 'üëã –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? üòä');
  userState[chatId] = { step: 'name' };
});

bot.on('message', (msg) => {
  const chatId = msg.chat.id;

  if (userState[chatId] && userState[chatId].step) {
    switch (userState[chatId].step) {
      case 'name':
        userState[chatId].name = msg.text;

        bot.sendMessage(chatId, 'üì± –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏:', {
          reply_markup: {
            keyboard: [
              [{ text: 'üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç', request_contact: true }]
            ],
            resize_keyboard: true,
            one_time_keyboard: true
          }
        });

        userState[chatId].step = 'contacts';
        break;

      case 'contacts':
        if (msg.contact) {
          userState[chatId].contacts = msg.contact.phone_number;
          bot.sendMessage(chatId, '–°–ø–∞—Å–∏–±–æ! üôå –ö–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å? ‚úçÔ∏è');
          userState[chatId].step = 'question';
        } else {
          bot.sendMessage(chatId, '‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞.');
        }
        break;

      case 'question':
        userState[chatId].question = msg.text;

        bot.sendMessage(adminChatId, `üîî –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç ${userState[chatId].name}!\nüìû –ö–æ–Ω—Ç–∞–∫—Ç—ã: ${userState[chatId].contacts}\n‚ùì –í–æ–ø—Ä–æ—Å: ${userState[chatId].question}`);
        bot.sendMessage(chatId, '–°–ø–∞—Å–∏–±–æ! üôè –Ø –ø–µ—Ä–µ–¥–∞–ª —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å. –û–∂–∏–¥–∞–π –æ—Ç–≤–µ—Ç–∞. üí¨');

        delete userState[chatId];
        break;

      default:
        bot.sendMessage(chatId, '‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.');
        break;
    }
  }
});
